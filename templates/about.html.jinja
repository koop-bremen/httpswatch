{% extends "base.html.jinja" %}
{% block subtitle %}About{% endblock %}

{% block body %}

<h1>Über HTTPSWatch</h1>

<h2>Ratings</h2>
<p>HTTPSWatch versieht jede getestete Seite mit einer Bewertung der Qualität ihrer HTTPS-Verbindung. Wenn keine vertrauenswürdige TLS-Verbindung aufgebaut oder die Seite nicht über TLS geladen werden konnte, erhält sie die Bewertng <span class="site-grade-schlecht">Schlecht</span>. Die Bewertung <span class="site-grade-mittle">Mittel</span> heißt, eine TLS-Verbindung konnte aufgebaut werden, aber es gab andere Probleme hinsichtlich der Qualität mit der HTTPS auf der Seite eingesetzt wird (z.B. die HTTP-Seite leitet nicht zur HTTPS-Seite weiter oder der <code>Strict-Transport-Security</code>-Header (<a href="https://developer.mozilla.org/en-US/docs/Web/Security/HTTP_strict_transport_security">HSTS</a>) ist nicht gesetzt). Wenn alles ok ist wird die Seite mit <span class="site-grade-gut">gut</span> bewertet.

<h2>Einschr&auml;nkungen</h2>
<p>Einige von HTTPSWatch mit <span class="site-grade-mittel">Mittel</span> bewertete Seiten sind im Browser nicht benutzbar. Das liegt vor allem an sogenanntem <a href="https://developer.mozilla.org/en-US/docs/Security/MixedContent">Mixed Content</a>, also an Inhalten, die zum teil über HTTPS und zum Teil über HTTP ausgeliefert werden. HTTPSWatch erkennt dies nicht.
<p>Abgesehen von der Validierung des Hostnamens unternimmt HTTPSWatch keine weitergehende Bewertung der TLS Verbindung. Dafür ist ein Link zum <a href="https://www.ssllabs.com/ssltest/">SSL Labs <quote>SSL Server Test</quote></a> ist für jede Seite vorhanden.

<h2>Seitenauswahl</h2>
<p>Es ist nicht das Ziel von HTTPSWatch jede Tageszeitung, Universität oder sonstige Webseite zu testen. Es sollen lediglich einige respräsentative Seiten jeder Kategorie analysiert werden. Üblicherweise sind dies die beliebtesten Seiten in jeder Kategorie, die daher die meisten Nutzer/innen betreffen. Die Hoffnung ist, dass wenn diese Seiten HTTPS vernünftig einsetzen, andere folgen werden.

<h2>Wie wird HTTPS vernünftig eingesetzt</h2>
<p>There&rsquo;s a lot of information on the web about this, which may be found by searching. The <a href="https://www.eff.org/https-everywhere/deploying-https">EFF&rsquo;s guide</a> is a good starting place. <a href="https://18f.gsa.gov/">18F</a> has information about their TLS deployment standards including reusable nginx configuration files <a href="https://github.com/18F/tls-standards">on GitHub</a>.

<h2>Code</h2>
<p>The code is available on <a href="https://github.com/gutworth/httpswatch">GitHub</a> and pull requests are welcome. Join us on <a href="https://freenode.net">Freenode&rsquo;s</a> <code>#httpswatch</code> channel for discussion.

<h2>Credits</h2>
<p>HTTPSWatch was originally created by Benjamin Peterson. <a href="https://github.com/gutworth/httpswatch/graphs/contributors">Contributors around the world</a> now help maintain it.

<p>HTTPSWatch was inspired by Alex Gaynor&rsquo;s <a href="https://alexgaynor.net/2014/nov/12/state-of-news-tls/">blog</a> <a href="https://alexgaynor.net/2014/dec/30/state-of-news-tls-part-ii/">posts</a> about news sites&rsquo; HTTPS support.

{% endblock %}
